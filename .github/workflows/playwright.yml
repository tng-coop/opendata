name: Playwright Tests and GitHub Pages Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -U postgres; then
              echo "PostgreSQL is ready"
              break
            else
              echo "Waiting for PostgreSQL..."
              sleep 2
            fi
          done

      - name: Setup Database and User
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE USER yasu WITH PASSWORD 'tng123';"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "ALTER USER yasu CREATEDB;"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE tng OWNER yasu;"
        env:
          PGPASSWORD: postgres

      - name: Test Database Connection
        run: |
          PGPASSWORD='tng123' psql -h localhost -p 5432 -U yasu -d tng -c '\q'
        env:
          PGPASSWORD: tng123

      - name: Apply Database Schema
        run: |
          PGPASSWORD='tng123' psql -h localhost -U yasu -d tng -f opendata_schema.sql
        env:
          PGPASSWORD: tng123

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install

      - name: Run Playwright Tests
        id: playwright-tests
        run: npm test

      - name: Upload Test Report
        if: ${{ always() }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report/

  deploy-report:
    needs: run-tests
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy Test Report to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Display Deployment URL
        run: |
          echo "Your test report is live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
